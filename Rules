#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.


preprocess do
	paginateArticles
	createTagItems
end

compile '/assets/css/*' do
    if item[:extension] == 'scss' or item[:extension] == 'sass'
        filter :sass, { :cache => false, :style => (@config[:debug] ? :compact : :compressed) }
    end
    filter :yui_compressor, { :type => 'css', :munge => true, :preserve_semicolons => false, :optimize => true } unless @config[:debug]
end

compile '/assets/js/*' do
    filter :erb
    filter :uglify_js, { :mangle => { :sort => true }, :compress => { :drop_console => true } } unless @config[:debug]
end

compile 'sitemap' do
    filter :erb
end

compile 'posts/feed' do
    filter :erb
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    case item[:extension]
      when 'md'
          filter :kramdown
      when 'html'
          nil
      else
          filter :erb
    end
    layout item[:layout] if item[:layout]
    
    unless ['xml'].include?(item[:extension])
      if ( (Regexp.new('\A(\\/guide\\/)').match(item.identifier)) || (Regexp.new('\A(\\/contact\\/)').match(item.identifier)) || (Regexp.new('\A(\\/about\\/)').match(item.identifier)) )
          layout 'content_without_sidebar'
      else 
          layout 'content_with_sidebar'
      end

      layout 'default'
    end
    filter :cache_buster 
  end
end

route '/posts/feed' do
	'/atom.xml'
end

route 'browserconfig' do
    item.identifier.chop + '.xml'
end

route 'sitemap' do
	item.identifier.chop + '.xml'
end

route '*.erb' do
	item.identifier.chop + '.html'
end

route '/pages/1/' do
	'/index.html'
end

route '/assets/*' do
    case item[:extension]
    when 'svg'
        item.identifier.chop + '.' + item[:extension]
    when 'sass'
        item.identifier.chop + fingerprint(item[:filename]) + '.' + 'css'
    else
        item.identifier.chop + fingerprint(item[:filename]) + '.' + item[:extension]
    end
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :slim, format: :html, pretty: true, disable_escape: true
