#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

#compile '/stylesheet/' do
  # don’t filter or layout
#end

#preprocess do
#	def paginate_posts
#		articles_to_paginate = sorted_articles
#		article_groups[]
#		until articles_to_paginate.empty?
#			article_groups << articles_to_paginate.slice!(0..@config[:page_size]-1)
#		end
#
#		article_groups.each_with_index do |subarticles, i|
#			first = i*config[:page_size] + 1
#			last = (i+1)*config[:page_size]
#
#			@items << Nanoc::Item.new(
#				"
#			)
#		end
#	end
#
#	paginate_posts
#end

compile '/assets/*' do
	# No-op
end

#compile '/posts/*' do
#    filter :kramdown
#    layout 'post'
#    filter :cache_buster 
#end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    case item[:extension]
      when 'md'
        filter :kramdown
        layout item[:layout] || 'default'
        filter :cache_buster 
      else
        filter :erb
        layout item[:layout] || 'default'
        filter :cache_buster 
    end
  end
end

#route '/stylesheet/' do
#  '/style.css'
#end

route '/posts/*' do
    y,m,slug = /([0-9]+)\/([0-9]+)\/([^\/]+)/
      .match(item.identifier).captures

    "/#{y}/#{m}/#{slug}/index.html"
end

route '/overlay/neo2/*' do
	'/overlay/neo2/index.html'
end

route '/overlay/outdated/*' do
	'/overlay/outdated/index.html'
end

route '/livecd/changelog/*' do
	'/livecd/changelog/index.html'
end

route '/assets/*' do
	hash = cachebust?(item) ? fingerprint(item[:filename]) : ''
	item.identifier.chop + hash + '.' + item[:extension]
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
